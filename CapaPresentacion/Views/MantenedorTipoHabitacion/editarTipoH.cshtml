@model CapaEntidades.EntTipoDeHabitacion
@using CapaEntidades;
@{
    ViewBag.Title = "editarTipoH";
    Layout = "~/Views/Shared/_LayoutMantenedores.cshtml";
    EntCuenta cuenta = (EntCuenta)ViewBag.Cuenta;
}

@section Scripts
{
    <script>
        $("#limpiar").empty()
        $("#userInfo").append(`
                <!-- Cuando la sesion esta iniciada-->
                        <ul>
                            <li class="">
                                <div class="header_login">
                                    <a href="#" data-toggle="dropdown" aria-expanded="false">
                                        <img src="https://images.vexels.com/media/users/3/141066/isolated/preview/2f9f642a85dc4a93ad4400b18c9f0e7e-empresario-cuadrado-avatar-rojo-by-vexels.png" alt="" style="border-radius: 50%; height: 45px; width: 45px"> @cuenta.Recep.UserName
                                        <span class=" fa fa-angle-down"></span>
                                    </a>
                                    <ul class="dropdown-menu dropdown-usermenu pull-right" style="background-color: rgba(14,9,35,0.88);">
                                        <li><a href="#" style="padding-left: 17px; padding-bottom: 0;"><i class="fa fa-user"> Perfil </i></a></li>
                                        <li><a href="@Url.Action("MisReservas", "AnularReserva")" style="padding-left: 17px; padding-bottom: 0;"><i class="fa fa-list"> Mis Reservas </i></a></li>
                                        <li><a href="@Url.Action("CerrarSesion", "Login")" style="padding-left: 17px; padding-bottom: 0;"><i class="fa fa-sign-out"> Cerrar Sesión </i></a></li>
                                    </ul>
                                </div>
                            </li>
                        </ul>
            `)
        //$("a#adminName").attr("href", "/Login/CerrarSesion")
    </script>
}

<div class="home" style="background-image: url(../../Bootstrap/images/elements.jpg)">
    <!-- Para cambiar la imagen, ir a main_styles.css, a la funcion .home y cambiar la ruta-->
    <div class="home_container d-flex flex-column align-items-center justify-content-center">
        <div class="home_title"><h1>Editar Tipo de Habitacion</h1></div>
    </div>
</div>

<div class="form-style">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <section class="container col-4 m-auto" id="listarTiposH">
            <h4>Editar tipo de habitación</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.TipodehabitacionID)
                <br />
                @Html.EditorFor(model => model.TipodehabitacionID, new { htmlAttributes = new { @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.TipodehabitacionID, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Capacidad)
                <br />
                @Html.EditorFor(model => model.Capacidad, new { htmlAttributes = new {  } })
                @Html.ValidationMessageFor(model => model.Capacidad, "", new { @class = "text-danger" })
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Nombretipodehabitacion)
                <br />
                @Html.EditorFor(model => model.Nombretipodehabitacion, new { htmlAttributes = new {  } })
                @Html.ValidationMessageFor(model => model.Nombretipodehabitacion, "", new { @class = "text-danger" })
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Numerodecamas)
                <br />
                @Html.EditorFor(model => model.Numerodecamas, new { htmlAttributes = new {  } })
                @Html.ValidationMessageFor(model => model.Numerodecamas, "", new { @class = "text-danger" })
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Precio)
                <br />
                @Html.EditorFor(model => model.Precio, new { htmlAttributes = new {  } })
                @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Costoadicional)
                <br />
                @Html.EditorFor(model => model.Costoadicional, new { htmlAttributes = new {  } })
                @Html.ValidationMessageFor(model => model.Costoadicional, "", new { @class = "text-danger" })
            </div>

            <div>
                <hr />
                <button type="submit" class="btn-success btn-lg"> Guardar</button>
                <button type="button" class="btn-danger btn-lg">@Html.ActionLink(" Cancelar", "listarTiposH")</button>
            </div>

        </section>
    }
</div>
